package nl.devoorkant.sbdr.cir.data.model;
// Generated Apr 14, 2016 7:26:47 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * CirAdres generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="CirCirAdres")
@Table(name="Cir_Adres"
)
public class CirAdres  implements java.io.Serializable {


     private Integer id;
     private CirAdrestype cirAdrestype;
     private Date datumBegin;
     private String straat;
     private Integer huisNummer;
     private String huisNummerToevoeging1;
     private String huisNummerToevoeging2;
     private String postcode;
     private String plaats;
     private String telefoonNummer;
     private Set<CirHandelsnaam> cirHandelsnaams = new HashSet<CirHandelsnaam>(0);
     private Set<CirInsolventie> cirInsolventies = new HashSet<CirInsolventie>(0);
     private Set<CirCbv> cirCbvs = new HashSet<CirCbv>(0);

    public CirAdres() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CodeAdresType")
    public CirAdrestype getCirAdrestype() {
        return this.cirAdrestype;
    }
    
    public void setCirAdrestype(CirAdrestype cirAdrestype) {
        this.cirAdrestype = cirAdrestype;
    }



    @Transient
    public String getCirAdrestypeCode() {
        return this.cirAdrestype == null ? null : this.cirAdrestype.getCode();
    }

    public void setCirAdrestypeCode(String code) {
        if (code == null) {
            this.cirAdrestype = null;
        } else {
            CirAdrestype obj = new CirAdrestype();
            obj.setCode(code);
            this.cirAdrestype = obj;
        }
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.DATE)
    @Column(name="DatumBegin", length=10)
    public Date getDatumBegin() {
        return this.datumBegin;
    }
    
    public void setDatumBegin(Date datumBegin) {
        this.datumBegin = datumBegin;
    }


    
    @Column(name="Straat", nullable=false, length=35)
    public String getStraat() {
        return this.straat;
    }
    
    public void setStraat(String straat) {
        this.straat = straat;
    }


    
    @Column(name="HuisNummer")
    public Integer getHuisNummer() {
        return this.huisNummer;
    }
    
    public void setHuisNummer(Integer huisNummer) {
        this.huisNummer = huisNummer;
    }


    
    @Column(name="HuisNummerToevoeging1", length=10)
    public String getHuisNummerToevoeging1() {
        return this.huisNummerToevoeging1;
    }
    
    public void setHuisNummerToevoeging1(String huisNummerToevoeging1) {
        this.huisNummerToevoeging1 = huisNummerToevoeging1;
    }


    
    @Column(name="HuisNummerToevoeging2", length=10)
    public String getHuisNummerToevoeging2() {
        return this.huisNummerToevoeging2;
    }
    
    public void setHuisNummerToevoeging2(String huisNummerToevoeging2) {
        this.huisNummerToevoeging2 = huisNummerToevoeging2;
    }


    
    @Column(name="Postcode", length=7)
    public String getPostcode() {
        return this.postcode;
    }
    
    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }


    
    @Column(name="Plaats", length=40)
    public String getPlaats() {
        return this.plaats;
    }
    
    public void setPlaats(String plaats) {
        this.plaats = plaats;
    }


    
    @Column(name="TelefoonNummer", length=15)
    public String getTelefoonNummer() {
        return this.telefoonNummer;
    }
    
    public void setTelefoonNummer(String telefoonNummer) {
        this.telefoonNummer = telefoonNummer;
    }


@XmlTransient
@JsonIgnore
@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="Cir_Handelsnaam_Cir_Adres", catalog="cir", joinColumns = { 
        @JoinColumn(name="Adres_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Handelsnaam_ID", nullable=false, updatable=false) })
    public Set<CirHandelsnaam> getCirHandelsnaams() {
        return this.cirHandelsnaams;
    }
    
    public void setCirHandelsnaams(Set<CirHandelsnaam> cirHandelsnaams) {
        this.cirHandelsnaams = cirHandelsnaams;
    }


@XmlTransient
@JsonIgnore
@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="Cir_Insolventie_Cir_Adres", catalog="cir", joinColumns = { 
        @JoinColumn(name="Adres_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Insolventie_ID", nullable=false, updatable=false) })
    public Set<CirInsolventie> getCirInsolventies() {
        return this.cirInsolventies;
    }
    
    public void setCirInsolventies(Set<CirInsolventie> cirInsolventies) {
        this.cirInsolventies = cirInsolventies;
    }


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="cirAdres")
    public Set<CirCbv> getCirCbvs() {
        return this.cirCbvs;
    }
    
    public void setCirCbvs(Set<CirCbv> cirCbvs) {
        this.cirCbvs = cirCbvs;
    }





}


