package nl.devoorkant.sbdr.cir.data.model;
// Generated Apr 14, 2016 7:26:47 PM by Hibernate Tools 3.2.4.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * BatchConfiguratie generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="CirBatchConfiguratie")
@Table(name="BatchConfiguratie"
)
public class BatchConfiguratie  implements java.io.Serializable {


     private Integer batchConfiguratieId;
     private boolean useImportFile;
     private String dirImportFile;
     private boolean useExportFile;
     private String dirExportFile;

    public BatchConfiguratie() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="BatchConfiguratie_ID", unique=true, nullable=false)
    public Integer getBatchConfiguratieId() {
        return this.batchConfiguratieId;
    }
    
    public void setBatchConfiguratieId(Integer batchConfiguratieId) {
        this.batchConfiguratieId = batchConfiguratieId;
    }


    
    @Column(name="UseImportFile", nullable=false)
    public boolean isUseImportFile() {
        return this.useImportFile;
    }
    
    public void setUseImportFile(boolean useImportFile) {
        this.useImportFile = useImportFile;
    }


    
    @Column(name="DirImportFile", length=100)
    public String getDirImportFile() {
        return this.dirImportFile;
    }
    
    public void setDirImportFile(String dirImportFile) {
        this.dirImportFile = dirImportFile;
    }


    
    @Column(name="UseExportFile", nullable=false)
    public boolean isUseExportFile() {
        return this.useExportFile;
    }
    
    public void setUseExportFile(boolean useExportFile) {
        this.useExportFile = useExportFile;
    }


    
    @Column(name="DirExportFile", length=100)
    public String getDirExportFile() {
        return this.dirExportFile;
    }
    
    public void setDirExportFile(String dirExportFile) {
        this.dirExportFile = dirExportFile;
    }





}


