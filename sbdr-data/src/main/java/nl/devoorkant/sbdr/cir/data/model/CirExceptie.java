package nl.devoorkant.sbdr.cir.data.model;
// Generated Apr 14, 2016 7:26:47 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * CirExceptie generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="CirCirExceptie")
@Table(name="Cir_Exceptie"
)
public class CirExceptie  implements java.io.Serializable {


     private Integer id;
     private CirExceptietype cirExceptietype;
     private Date tijd;
     private String omschrijving;

    public CirExceptie() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CodeExceptieType")
    public CirExceptietype getCirExceptietype() {
        return this.cirExceptietype;
    }
    
    public void setCirExceptietype(CirExceptietype cirExceptietype) {
        this.cirExceptietype = cirExceptietype;
    }



    @Transient
    public String getCirExceptietypeCode() {
        return this.cirExceptietype == null ? null : this.cirExceptietype.getCode();
    }

    public void setCirExceptietypeCode(String code) {
        if (code == null) {
            this.cirExceptietype = null;
        } else {
            CirExceptietype obj = new CirExceptietype();
            obj.setCode(code);
            this.cirExceptietype = obj;
        }
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Tijd", nullable=false, length=19)
    public Date getTijd() {
        return this.tijd;
    }
    
    public void setTijd(Date tijd) {
        this.tijd = tijd;
    }


    
    @Column(name="Omschrijving")
    public String getOmschrijving() {
        return this.omschrijving;
    }
    
    public void setOmschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
    }





}


