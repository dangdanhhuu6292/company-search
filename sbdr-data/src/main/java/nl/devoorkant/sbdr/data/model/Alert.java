package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Alert generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Alert")
@Table(name="Alert"
)
public class Alert  implements java.io.Serializable {


     private Integer alertId;
     private Bedrijf bedrijfByAlertOverBedrijfId;
     private Monitoring monitoring;
     private Melding melding;
     private AlertType alertType;
     private Bedrijf bedrijfByBedrijfId;
     private Support support;
     private Gebruiker gebruiker;
     private Date datumAlert;
     private Date datumGeldig;

    public Alert() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Alert_ID", unique=true, nullable=false)
    public Integer getAlertId() {
        return this.alertId;
    }
    
    public void setAlertId(Integer alertId) {
        this.alertId = alertId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AlertOverBedrijf_ID")
    public Bedrijf getBedrijfByAlertOverBedrijfId() {
        return this.bedrijfByAlertOverBedrijfId;
    }
    
    public void setBedrijfByAlertOverBedrijfId(Bedrijf bedrijfByAlertOverBedrijfId) {
        this.bedrijfByAlertOverBedrijfId = bedrijfByAlertOverBedrijfId;
    }



    @Transient
    public Integer getBedrijfByAlertOverBedrijfIdBedrijfId() {
        return this.bedrijfByAlertOverBedrijfId == null ? null : this.bedrijfByAlertOverBedrijfId.getBedrijfId();
    }

    public void setBedrijfByAlertOverBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByAlertOverBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByAlertOverBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Monitoring_ID")
    public Monitoring getMonitoring() {
        return this.monitoring;
    }
    
    public void setMonitoring(Monitoring monitoring) {
        this.monitoring = monitoring;
    }



    @Transient
    public Integer getMonitoringMonitoringId() {
        return this.monitoring == null ? null : this.monitoring.getMonitoringId();
    }

    public void setMonitoringMonitoringId(Integer monitoringId) {
        if (monitoringId == null) {
            this.monitoring = null;
        } else {
            Monitoring obj = new Monitoring();
            obj.setMonitoringId(monitoringId);
            this.monitoring = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Melding_ID")
    public Melding getMelding() {
        return this.melding;
    }
    
    public void setMelding(Melding melding) {
        this.melding = melding;
    }



    @Transient
    public Integer getMeldingMeldingId() {
        return this.melding == null ? null : this.melding.getMeldingId();
    }

    public void setMeldingMeldingId(Integer meldingId) {
        if (meldingId == null) {
            this.melding = null;
        } else {
            Melding obj = new Melding();
            obj.setMeldingId(meldingId);
            this.melding = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AlertType")
    public AlertType getAlertType() {
        return this.alertType;
    }
    
    public void setAlertType(AlertType alertType) {
        this.alertType = alertType;
    }



    @Transient
    public String getAlertTypeCode() {
        return this.alertType == null ? null : this.alertType.getCode();
    }

    public void setAlertTypeCode(String code) {
        if (code == null) {
            this.alertType = null;
        } else {
            AlertType obj = new AlertType();
            obj.setCode(code);
            this.alertType = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Bedrijf_ID")
    public Bedrijf getBedrijfByBedrijfId() {
        return this.bedrijfByBedrijfId;
    }
    
    public void setBedrijfByBedrijfId(Bedrijf bedrijfByBedrijfId) {
        this.bedrijfByBedrijfId = bedrijfByBedrijfId;
    }



    @Transient
    public Integer getBedrijfByBedrijfIdBedrijfId() {
        return this.bedrijfByBedrijfId == null ? null : this.bedrijfByBedrijfId.getBedrijfId();
    }

    public void setBedrijfByBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Support_ID")
    public Support getSupport() {
        return this.support;
    }
    
    public void setSupport(Support support) {
        this.support = support;
    }



    @Transient
    public Integer getSupportSupportId() {
        return this.support == null ? null : this.support.getSupportId();
    }

    public void setSupportSupportId(Integer supportId) {
        if (supportId == null) {
            this.support = null;
        } else {
            Support obj = new Support();
            obj.setSupportId(supportId);
            this.support = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID")
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumAlert", length=19)
    public Date getDatumAlert() {
        return this.datumAlert;
    }
    
    public void setDatumAlert(Date datumAlert) {
        this.datumAlert = datumAlert;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumGeldig", length=19)
    public Date getDatumGeldig() {
        return this.datumGeldig;
    }
    
    public void setDatumGeldig(Date datumGeldig) {
        this.datumGeldig = datumGeldig;
    }





}


