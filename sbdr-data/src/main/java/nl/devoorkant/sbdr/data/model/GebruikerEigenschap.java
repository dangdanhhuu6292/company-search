package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * GebruikerEigenschap generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="GebruikerEigenschap")
@Table(name="GebruikerEigenschap"
)
public class GebruikerEigenschap  implements java.io.Serializable {


     private Integer gebruikerEigenschapId;
     private Eigenschap eigenschap;
     private GebruikerBasis gebruikerBasis;
     private String waarde;

    public GebruikerEigenschap() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="GebruikerEigenschap_ID", unique=true, nullable=false)
    public Integer getGebruikerEigenschapId() {
        return this.gebruikerEigenschapId;
    }
    
    public void setGebruikerEigenschapId(Integer gebruikerEigenschapId) {
        this.gebruikerEigenschapId = gebruikerEigenschapId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Eigenschap_ID")
    public Eigenschap getEigenschap() {
        return this.eigenschap;
    }
    
    public void setEigenschap(Eigenschap eigenschap) {
        this.eigenschap = eigenschap;
    }



    @Transient
    public Integer getEigenschapEigenschapId() {
        return this.eigenschap == null ? null : this.eigenschap.getEigenschapId();
    }

    public void setEigenschapEigenschapId(Integer eigenschapId) {
        if (eigenschapId == null) {
            this.eigenschap = null;
        } else {
            Eigenschap obj = new Eigenschap();
            obj.setEigenschapId(eigenschapId);
            this.eigenschap = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID", nullable=false)
    public GebruikerBasis getGebruikerBasis() {
        return this.gebruikerBasis;
    }
    
    public void setGebruikerBasis(GebruikerBasis gebruikerBasis) {
        this.gebruikerBasis = gebruikerBasis;
    }



    @Transient
    public Integer getGebruikerBasisGebruikerId() {
        return this.gebruikerBasis == null ? null : this.gebruikerBasis.getGebruikerId();
    }

    public void setGebruikerBasisGebruikerId(Integer gebruikerId) {
        if (gebruikerId == null) {
            this.gebruikerBasis = null;
        } else {
            GebruikerBasis obj = new GebruikerBasis();
            obj.setGebruikerId(gebruikerId);
            this.gebruikerBasis = obj;
        }
    }


    
    @Column(name="Waarde", length=35)
    public String getWaarde() {
        return this.waarde;
    }
    
    public void setWaarde(String waarde) {
        this.waarde = waarde;
    }





}


