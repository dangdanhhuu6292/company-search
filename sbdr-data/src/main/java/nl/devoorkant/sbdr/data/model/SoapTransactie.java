package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * SoapTransactie generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="SoapTransactie")
@Table(name="SoapTransactie"
)
public class SoapTransactie  implements java.io.Serializable {


     private String soapTransactieId;
     private Gebruiker gebruiker;
     private SoapBerichtType soapBerichtType;
     private byte[] request;
     private byte[] response;

    public SoapTransactie() {
    }

   
     @Id 

    
    @Column(name="SoapTransactie_ID", unique=true, nullable=false, length=36)
    public String getSoapTransactieId() {
        return this.soapTransactieId;
    }
    
    public void setSoapTransactieId(String soapTransactieId) {
        this.soapTransactieId = soapTransactieId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID", nullable=false)
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SoapBerichtType", nullable=false)
    public SoapBerichtType getSoapBerichtType() {
        return this.soapBerichtType;
    }
    
    public void setSoapBerichtType(SoapBerichtType soapBerichtType) {
        this.soapBerichtType = soapBerichtType;
    }



    @Transient
    public String getSoapBerichtTypeCode() {
        return this.soapBerichtType == null ? null : this.soapBerichtType.getCode();
    }

    public void setSoapBerichtTypeCode(String code) {
        if (code == null) {
            this.soapBerichtType = null;
        } else {
            SoapBerichtType obj = new SoapBerichtType();
            obj.setCode(code);
            this.soapBerichtType = obj;
        }
    }


    
    @Column(name="Request", nullable=false)
    public byte[] getRequest() {
        return this.request;
    }
    
    public void setRequest(byte[] request) {
        this.request = request;
    }


    
    @Column(name="Response", nullable=false)
    public byte[] getResponse() {
        return this.response;
    }
    
    public void setResponse(byte[] response) {
        this.response = response;
    }





}


