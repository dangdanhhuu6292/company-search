package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Klant generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Klant")
@Table(name="Klant"
)
public class Klant extends Gebruiker implements java.io.Serializable {


     private BriefBatch briefBatch;
     private KlantStatus klantStatus;
     private KortingsCode kortingsCode;
     private KlantType klantType;
     private BriefStatus briefStatus;
     private String bankrekeningNummer;
     private String bicnummer;
     private String bankNaam;
     private String btwnummer;
     private Integer nrGebruikers;
     private String tenaamstelling;
     private String activatieCode;
     private boolean nietBtwPlichtig;
     private boolean akkoordIncasso;
     private String contactGuid;
     private Date datumVerwerktExactOnline;
     private String bankAccountGuid;
     private boolean activatieReminderSent;
     private String directDebitMandatesGuid;
     private boolean eersteFactuurVerzonden;
     private String emailAdresFacturatie;
     private Set<InternalProcess> internalProcesses = new HashSet<InternalProcess>(0);

    public Klant() {
    }

   

@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BriefBatch_ID")
    public BriefBatch getBriefBatch() {
        return this.briefBatch;
    }
    
    public void setBriefBatch(BriefBatch briefBatch) {
        this.briefBatch = briefBatch;
    }



    @Transient
    public Integer getBriefBatchBriefBatchId() {
        return this.briefBatch == null ? null : this.briefBatch.getBriefBatchId();
    }

    public void setBriefBatchBriefBatchId(Integer briefBatchId) {
        if (briefBatchId == null) {
            this.briefBatch = null;
        } else {
            BriefBatch obj = new BriefBatch();
            obj.setBriefBatchId(briefBatchId);
            this.briefBatch = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="KlantStatus")
    public KlantStatus getKlantStatus() {
        return this.klantStatus;
    }
    
    public void setKlantStatus(KlantStatus klantStatus) {
        this.klantStatus = klantStatus;
    }



    @Transient
    public String getKlantStatusCode() {
        return this.klantStatus == null ? null : this.klantStatus.getCode();
    }

    public void setKlantStatusCode(String code) {
        if (code == null) {
            this.klantStatus = null;
        } else {
            KlantStatus obj = new KlantStatus();
            obj.setCode(code);
            this.klantStatus = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="KortingsCode")
    public KortingsCode getKortingsCode() {
        return this.kortingsCode;
    }
    
    public void setKortingsCode(KortingsCode kortingsCode) {
        this.kortingsCode = kortingsCode;
    }



    @Transient
    public String getKortingsCodeCode() {
        return this.kortingsCode == null ? null : this.kortingsCode.getCode();
    }

    public void setKortingsCodeCode(String code) {
        if (code == null) {
            this.kortingsCode = null;
        } else {
            KortingsCode obj = new KortingsCode();
            obj.setCode(code);
            this.kortingsCode = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="KlantType")
    public KlantType getKlantType() {
        return this.klantType;
    }
    
    public void setKlantType(KlantType klantType) {
        this.klantType = klantType;
    }



    @Transient
    public String getKlantTypeCode() {
        return this.klantType == null ? null : this.klantType.getCode();
    }

    public void setKlantTypeCode(String code) {
        if (code == null) {
            this.klantType = null;
        } else {
            KlantType obj = new KlantType();
            obj.setCode(code);
            this.klantType = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BriefStatus", nullable=false)
    public BriefStatus getBriefStatus() {
        return this.briefStatus;
    }
    
    public void setBriefStatus(BriefStatus briefStatus) {
        this.briefStatus = briefStatus;
    }



    @Transient
    public String getBriefStatusCode() {
        return this.briefStatus == null ? null : this.briefStatus.getCode();
    }

    public void setBriefStatusCode(String code) {
        if (code == null) {
            this.briefStatus = null;
        } else {
            BriefStatus obj = new BriefStatus();
            obj.setCode(code);
            this.briefStatus = obj;
        }
    }


    
    @Column(name="BankrekeningNummer", length=40)
    public String getBankrekeningNummer() {
        return this.bankrekeningNummer;
    }
    
    public void setBankrekeningNummer(String bankrekeningNummer) {
        this.bankrekeningNummer = bankrekeningNummer;
    }


    
    @Column(name="BICNummer", length=40)
    public String getBicnummer() {
        return this.bicnummer;
    }
    
    public void setBicnummer(String bicnummer) {
        this.bicnummer = bicnummer;
    }


    
    @Column(name="BankNaam", length=40)
    public String getBankNaam() {
        return this.bankNaam;
    }
    
    public void setBankNaam(String bankNaam) {
        this.bankNaam = bankNaam;
    }


    
    @Column(name="BTWNummer", nullable=false, length=40)
    public String getBtwnummer() {
        return this.btwnummer;
    }
    
    public void setBtwnummer(String btwnummer) {
        this.btwnummer = btwnummer;
    }


    
    @Column(name="NrGebruikers")
    public Integer getNrGebruikers() {
        return this.nrGebruikers;
    }
    
    public void setNrGebruikers(Integer nrGebruikers) {
        this.nrGebruikers = nrGebruikers;
    }


    
    @Column(name="Tenaamstelling")
    public String getTenaamstelling() {
        return this.tenaamstelling;
    }
    
    public void setTenaamstelling(String tenaamstelling) {
        this.tenaamstelling = tenaamstelling;
    }


    
    @Column(name="ActivatieCode", length=36)
    public String getActivatieCode() {
        return this.activatieCode;
    }
    
    public void setActivatieCode(String activatieCode) {
        this.activatieCode = activatieCode;
    }


    
    @Column(name="NietBtwPlichtig", nullable=false)
    public boolean isNietBtwPlichtig() {
        return this.nietBtwPlichtig;
    }
    
    public void setNietBtwPlichtig(boolean nietBtwPlichtig) {
        this.nietBtwPlichtig = nietBtwPlichtig;
    }


    
    @Column(name="AkkoordIncasso", nullable=false)
    public boolean isAkkoordIncasso() {
        return this.akkoordIncasso;
    }
    
    public void setAkkoordIncasso(boolean akkoordIncasso) {
        this.akkoordIncasso = akkoordIncasso;
    }


    
    @Column(name="ContactGuid", length=36)
    public String getContactGuid() {
        return this.contactGuid;
    }
    
    public void setContactGuid(String contactGuid) {
        this.contactGuid = contactGuid;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumVerwerktExactOnline", length=19)
    public Date getDatumVerwerktExactOnline() {
        return this.datumVerwerktExactOnline;
    }
    
    public void setDatumVerwerktExactOnline(Date datumVerwerktExactOnline) {
        this.datumVerwerktExactOnline = datumVerwerktExactOnline;
    }


    
    @Column(name="BankAccountGuid", length=36)
    public String getBankAccountGuid() {
        return this.bankAccountGuid;
    }
    
    public void setBankAccountGuid(String bankAccountGuid) {
        this.bankAccountGuid = bankAccountGuid;
    }


    
    @Column(name="ActivatieReminderSent", nullable=false)
    public boolean isActivatieReminderSent() {
        return this.activatieReminderSent;
    }
    
    public void setActivatieReminderSent(boolean activatieReminderSent) {
        this.activatieReminderSent = activatieReminderSent;
    }


    
    @Column(name="DirectDebitMandatesGuid", length=36)
    public String getDirectDebitMandatesGuid() {
        return this.directDebitMandatesGuid;
    }
    
    public void setDirectDebitMandatesGuid(String directDebitMandatesGuid) {
        this.directDebitMandatesGuid = directDebitMandatesGuid;
    }


    
    @Column(name="EersteFactuurVerzonden", nullable=false)
    public boolean isEersteFactuurVerzonden() {
        return this.eersteFactuurVerzonden;
    }
    
    public void setEersteFactuurVerzonden(boolean eersteFactuurVerzonden) {
        this.eersteFactuurVerzonden = eersteFactuurVerzonden;
    }
    
    @Column(name="EmailAdresFacturatie", length=50)
    public String getEmailAdresFacturatie() {
        return this.emailAdresFacturatie;
    }
    
    public void setEmailAdresFacturatie(String emailAdresFacturatie) {
        this.emailAdresFacturatie = emailAdresFacturatie;
    }    


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="klant")
    public Set<InternalProcess> getInternalProcesses() {
        return this.internalProcesses;
    }
    
    public void setInternalProcesses(Set<InternalProcess> internalProcesses) {
        this.internalProcesses = internalProcesses;
    }





}


