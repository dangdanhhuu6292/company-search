package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Logging generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Logging")
@Table(name="Logging"
)
public class Logging  implements java.io.Serializable {


     private Integer loggingId;
     private LogType logType;
     private Bedrijf bedrijf;
     private Gebruiker gebruiker;
     private Date datum;
     private String message;

    public Logging() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Logging_ID", unique=true, nullable=false)
    public Integer getLoggingId() {
        return this.loggingId;
    }
    
    public void setLoggingId(Integer loggingId) {
        this.loggingId = loggingId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LogType")
    public LogType getLogType() {
        return this.logType;
    }
    
    public void setLogType(LogType logType) {
        this.logType = logType;
    }



    @Transient
    public String getLogTypeCode() {
        return this.logType == null ? null : this.logType.getCode();
    }

    public void setLogTypeCode(String code) {
        if (code == null) {
            this.logType = null;
        } else {
            LogType obj = new LogType();
            obj.setCode(code);
            this.logType = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Bedrijf_ID")
    public Bedrijf getBedrijf() {
        return this.bedrijf;
    }
    
    public void setBedrijf(Bedrijf bedrijf) {
        this.bedrijf = bedrijf;
    }



    @Transient
    public Integer getBedrijfBedrijfId() {
        return this.bedrijf == null ? null : this.bedrijf.getBedrijfId();
    }

    public void setBedrijfBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijf = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijf = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID")
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Datum", length=19)
    public Date getDatum() {
        return this.datum;
    }
    
    public void setDatum(Date datum) {
        this.datum = datum;
    }


    
    @Column(name="Message")
    public String getMessage() {
        return this.message;
    }
    
    public void setMessage(String message) {
        this.message = message;
    }





}


