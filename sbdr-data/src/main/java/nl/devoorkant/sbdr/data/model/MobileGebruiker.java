package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * MobileGebruiker generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="MobileGebruiker")
@Table(name="MobileGebruiker"
    , uniqueConstraints = {@UniqueConstraint(columnNames="MobileClientKey"), @UniqueConstraint(columnNames={"Gebruiker_ID", "MobileClientKey"})} 
)
public class MobileGebruiker  implements java.io.Serializable {


     private Integer mobileGebruikerId;
     private Gebruiker gebruiker;
     private String mobileClientKey;
     private Date dateCreated;
     private boolean actief;

    public MobileGebruiker() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="MobileGebruiker_ID", unique=true, nullable=false)
    public Integer getMobileGebruikerId() {
        return this.mobileGebruikerId;
    }
    
    public void setMobileGebruikerId(Integer mobileGebruikerId) {
        this.mobileGebruikerId = mobileGebruikerId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID", nullable=false)
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


    
    @Column(name="MobileClientKey", unique=true, nullable=false, length=36)
    public String getMobileClientKey() {
        return this.mobileClientKey;
    }
    
    public void setMobileClientKey(String mobileClientKey) {
        this.mobileClientKey = mobileClientKey;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateCreated", nullable=false, length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }


    
    @Column(name="Actief", nullable=false)
    public boolean isActief() {
        return this.actief;
    }
    
    public void setActief(boolean actief) {
        this.actief = actief;
    }





}


