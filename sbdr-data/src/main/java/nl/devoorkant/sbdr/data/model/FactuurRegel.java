package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.math.BigDecimal;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * FactuurRegel generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="FactuurRegel")
@Table(name="FactuurRegel"
)
public class FactuurRegel  implements java.io.Serializable {


     private Integer factuurRegelId;
     private Factuur factuur;
     private Bedrijf managedBedrijf;     
     private Product product;
     private Date datum;
     private BigDecimal bedrag;

    public FactuurRegel() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="FactuurRegel_ID", unique=true, nullable=false)
    public Integer getFactuurRegelId() {
        return this.factuurRegelId;
    }
    
    public void setFactuurRegelId(Integer factuurRegelId) {
        this.factuurRegelId = factuurRegelId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Factuur_ID")
    public Factuur getFactuur() {
        return this.factuur;
    }
    
    public void setFactuur(Factuur factuur) {
        this.factuur = factuur;
    }



    @Transient
    public Integer getFactuurFactuurId() {
        return this.factuur == null ? null : this.factuur.getFactuurId();
    }

    public void setFactuurFactuurId(Integer factuurId) {
        if (factuurId == null) {
            this.factuur = null;
        } else {
            Factuur obj = new Factuur();
            obj.setFactuurId(factuurId);
            this.factuur = obj;
        }
    }

@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ManagedBedrijf_ID")
    public Bedrijf getManagedBedrijf() {
        return this.managedBedrijf;
    }
    
    public void setManagedBedrijf(Bedrijf managedBedrijf) {
        this.managedBedrijf = managedBedrijf;
    }



    @Transient
    public Integer getManagedBedrijfBedrijfId() {
        return this.managedBedrijf == null ? null : this.managedBedrijf.getBedrijfId();
    }

    public void setManagedBedrijfBedrijfId(Integer managedBedrijfId) {
        if (managedBedrijfId == null) {
            this.managedBedrijf = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(managedBedrijfId);
            this.managedBedrijf = obj;
        }
    }
    

@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Product")
    public Product getProduct() {
        return this.product;
    }
    
    public void setProduct(Product product) {
        this.product = product;
    }



    @Transient
    public String getProductCode() {
        return this.product == null ? null : this.product.getCode();
    }

    public void setProductCode(String code) {
        if (code == null) {
            this.product = null;
        } else {
            Product obj = new Product();
            obj.setCode(code);
            this.product = obj;
        }
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Datum", length=19)
    public Date getDatum() {
        return this.datum;
    }
    
    public void setDatum(Date datum) {
        this.datum = datum;
    }


    
    @Column(name="Bedrag", precision=10)
    public BigDecimal getBedrag() {
        return this.bedrag;
    }
    
    public void setBedrag(BigDecimal bedrag) {
        this.bedrag = bedrag;
    }





}


