package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Document generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Document")
@Table(name="Document"
)
public class Document  implements java.io.Serializable {


     private Integer documentId;
     private Bedrijf bedrijfByRapportBedrijfId;
     private BriefBatch briefBatch;
     private DocumentType documentType;
     private Bedrijf bedrijfByBedrijfId;
     private Gebruiker gebruiker;
     private String naam;
     private String fileNaam;
     private String referentieNummer;
     private Date datumAangemaakt;
     private boolean actief;
     private byte[] document;
     private Set<Melding> meldingen = new HashSet<Melding>(0);
     private Set<InternalProcess> internalProcesses = new HashSet<InternalProcess>(0);

    public Document() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Document_ID", unique=true, nullable=false)
    public Integer getDocumentId() {
        return this.documentId;
    }
    
    public void setDocumentId(Integer documentId) {
        this.documentId = documentId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RapportBedrijf_ID")
    public Bedrijf getBedrijfByRapportBedrijfId() {
        return this.bedrijfByRapportBedrijfId;
    }
    
    public void setBedrijfByRapportBedrijfId(Bedrijf bedrijfByRapportBedrijfId) {
        this.bedrijfByRapportBedrijfId = bedrijfByRapportBedrijfId;
    }



    @Transient
    public Integer getBedrijfByRapportBedrijfIdBedrijfId() {
        return this.bedrijfByRapportBedrijfId == null ? null : this.bedrijfByRapportBedrijfId.getBedrijfId();
    }

    public void setBedrijfByRapportBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByRapportBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByRapportBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BriefBatch_ID")
    public BriefBatch getBriefBatch() {
        return this.briefBatch;
    }
    
    public void setBriefBatch(BriefBatch briefBatch) {
        this.briefBatch = briefBatch;
    }



    @Transient
    public Integer getBriefBatchBriefBatchId() {
        return this.briefBatch == null ? null : this.briefBatch.getBriefBatchId();
    }

    public void setBriefBatchBriefBatchId(Integer briefBatchId) {
        if (briefBatchId == null) {
            this.briefBatch = null;
        } else {
            BriefBatch obj = new BriefBatch();
            obj.setBriefBatchId(briefBatchId);
            this.briefBatch = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DocumentType")
    public DocumentType getDocumentType() {
        return this.documentType;
    }
    
    public void setDocumentType(DocumentType documentType) {
        this.documentType = documentType;
    }



    @Transient
    public String getDocumentTypeCode() {
        return this.documentType == null ? null : this.documentType.getCode();
    }

    public void setDocumentTypeCode(String code) {
        if (code == null) {
            this.documentType = null;
        } else {
            DocumentType obj = new DocumentType();
            obj.setCode(code);
            this.documentType = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Bedrijf_ID")
    public Bedrijf getBedrijfByBedrijfId() {
        return this.bedrijfByBedrijfId;
    }
    
    public void setBedrijfByBedrijfId(Bedrijf bedrijfByBedrijfId) {
        this.bedrijfByBedrijfId = bedrijfByBedrijfId;
    }



    @Transient
    public Integer getBedrijfByBedrijfIdBedrijfId() {
        return this.bedrijfByBedrijfId == null ? null : this.bedrijfByBedrijfId.getBedrijfId();
    }

    public void setBedrijfByBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Gebruiker_ID")
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


    
    @Column(name="Naam", length=50)
    public String getNaam() {
        return this.naam;
    }
    
    public void setNaam(String naam) {
        this.naam = naam;
    }


    
    @Column(name="FileNaam", length=50)
    public String getFileNaam() {
        return this.fileNaam;
    }
    
    public void setFileNaam(String fileNaam) {
        this.fileNaam = fileNaam;
    }


    
    @Column(name="ReferentieNummer", length=50)
    public String getReferentieNummer() {
        return this.referentieNummer;
    }
    
    public void setReferentieNummer(String referentieNummer) {
        this.referentieNummer = referentieNummer;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumAangemaakt", length=19)
    public Date getDatumAangemaakt() {
        return this.datumAangemaakt;
    }
    
    public void setDatumAangemaakt(Date datumAangemaakt) {
        this.datumAangemaakt = datumAangemaakt;
    }


    
    @Column(name="Actief", nullable=false)
    public boolean isActief() {
        return this.actief;
    }
    
    public void setActief(boolean actief) {
        this.actief = actief;
    }


    
    @Column(name="Document")
    public byte[] getDocument() {
        return this.document;
    }
    
    public void setDocument(byte[] document) {
        this.document = document;
    }


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="document")
    public Set<Melding> getMeldingen() {
        return this.meldingen;
    }
    
    public void setMeldingen(Set<Melding> meldingen) {
        this.meldingen = meldingen;
    }


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="document")
    public Set<InternalProcess> getInternalProcesses() {
        return this.internalProcesses;
    }
    
    public void setInternalProcesses(Set<InternalProcess> internalProcesses) {
        this.internalProcesses = internalProcesses;
    }





}


