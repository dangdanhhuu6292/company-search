package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * MeldingBatch generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="MeldingBatch")
@Table(name="MeldingBatch"
)
public class MeldingBatch  implements java.io.Serializable {


     private Integer meldingBatchId;
     private Gebruiker gebruiker;
     private String signVoornaam;
     private String signAchternaam;
     private String signTelefoonNummer;
     private String signAfdeling;
     private Date datumAangemaakt;
     private Set<Melding> meldingen = new HashSet<Melding>(0);

    public MeldingBatch() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="MeldingBatch_ID", unique=true, nullable=false)
    public Integer getMeldingBatchId() {
        return this.meldingBatchId;
    }
    
    public void setMeldingBatchId(Integer meldingBatchId) {
        this.meldingBatchId = meldingBatchId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Sign_Gebruiker_ID")
    public Gebruiker getGebruiker() {
        return this.gebruiker;
    }
    
    public void setGebruiker(Gebruiker gebruiker) {
        this.gebruiker = gebruiker;
    }



    @Transient
    public Integer getGebruikerGebruikerId() {
        return this.gebruiker == null ? null : this.gebruiker.getGebruikerId();
    }

    public void setGebruikerGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruiker = obj;
    }


    
    @Column(name="Sign_Voornaam", length=50)
    public String getSignVoornaam() {
        return this.signVoornaam;
    }
    
    public void setSignVoornaam(String signVoornaam) {
        this.signVoornaam = signVoornaam;
    }


    
    @Column(name="Sign_Achternaam", length=50)
    public String getSignAchternaam() {
        return this.signAchternaam;
    }
    
    public void setSignAchternaam(String signAchternaam) {
        this.signAchternaam = signAchternaam;
    }


    
    @Column(name="Sign_TelefoonNummer", length=40)
    public String getSignTelefoonNummer() {
        return this.signTelefoonNummer;
    }
    
    public void setSignTelefoonNummer(String signTelefoonNummer) {
        this.signTelefoonNummer = signTelefoonNummer;
    }


    
    @Column(name="Sign_Afdeling", length=100)
    public String getSignAfdeling() {
        return this.signAfdeling;
    }
    
    public void setSignAfdeling(String signAfdeling) {
        this.signAfdeling = signAfdeling;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumAangemaakt", length=19)
    public Date getDatumAangemaakt() {
        return this.datumAangemaakt;
    }
    
    public void setDatumAangemaakt(Date datumAangemaakt) {
        this.datumAangemaakt = datumAangemaakt;
    }


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="meldingBatch")
    public Set<Melding> getMeldingen() {
        return this.meldingen;
    }
    
    public void setMeldingen(Set<Melding> meldingen) {
        this.meldingen = meldingen;
    }





}


