package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Monitoring generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Monitoring")
@Table(name="Monitoring"
)
public class Monitoring  implements java.io.Serializable {


     private Integer monitoringId;
     private Gebruiker gebruikerByMonitoringDoorGebruikerId;
     private Gebruiker gebruikerByVerwijderdDoorGebruikerId;
     private Bedrijf bedrijfByMonitoringDoorBedrijfId;
     private MonitoringStatus monitoringStatus;
     private Bedrijf bedrijfByMonitoringVanBedrijfId;
     private Gebruiker gebruikerByLaatsteMutatieDoorGebruikerId;
     private Date datumStart;
     private Date datumLaatsteCheck;
     private Date datumEinde;
     private String referentieNummerIntern;
     private String kvKnummer;
     private Set<Alert> alerts = new HashSet<Alert>(0);

    public Monitoring() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Monitoring_ID", unique=true, nullable=false)
    public Integer getMonitoringId() {
        return this.monitoringId;
    }
    
    public void setMonitoringId(Integer monitoringId) {
        this.monitoringId = monitoringId;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MonitoringDoorGebruiker_ID")
    public Gebruiker getGebruikerByMonitoringDoorGebruikerId() {
        return this.gebruikerByMonitoringDoorGebruikerId;
    }
    
    public void setGebruikerByMonitoringDoorGebruikerId(Gebruiker gebruikerByMonitoringDoorGebruikerId) {
        this.gebruikerByMonitoringDoorGebruikerId = gebruikerByMonitoringDoorGebruikerId;
    }



    @Transient
    public Integer getGebruikerByMonitoringDoorGebruikerIdGebruikerId() {
        return this.gebruikerByMonitoringDoorGebruikerId == null ? null : this.gebruikerByMonitoringDoorGebruikerId.getGebruikerId();
    }

    public void setGebruikerByMonitoringDoorGebruikerIdGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruikerByMonitoringDoorGebruikerId = obj;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VerwijderdDoorGebruiker_ID")
    public Gebruiker getGebruikerByVerwijderdDoorGebruikerId() {
        return this.gebruikerByVerwijderdDoorGebruikerId;
    }
    
    public void setGebruikerByVerwijderdDoorGebruikerId(Gebruiker gebruikerByVerwijderdDoorGebruikerId) {
        this.gebruikerByVerwijderdDoorGebruikerId = gebruikerByVerwijderdDoorGebruikerId;
    }



    @Transient
    public Integer getGebruikerByVerwijderdDoorGebruikerIdGebruikerId() {
        return this.gebruikerByVerwijderdDoorGebruikerId == null ? null : this.gebruikerByVerwijderdDoorGebruikerId.getGebruikerId();
    }

    public void setGebruikerByVerwijderdDoorGebruikerIdGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruikerByVerwijderdDoorGebruikerId = obj;
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MonitoringDoorBedrijf_ID")
    public Bedrijf getBedrijfByMonitoringDoorBedrijfId() {
        return this.bedrijfByMonitoringDoorBedrijfId;
    }
    
    public void setBedrijfByMonitoringDoorBedrijfId(Bedrijf bedrijfByMonitoringDoorBedrijfId) {
        this.bedrijfByMonitoringDoorBedrijfId = bedrijfByMonitoringDoorBedrijfId;
    }



    @Transient
    public Integer getBedrijfByMonitoringDoorBedrijfIdBedrijfId() {
        return this.bedrijfByMonitoringDoorBedrijfId == null ? null : this.bedrijfByMonitoringDoorBedrijfId.getBedrijfId();
    }

    public void setBedrijfByMonitoringDoorBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByMonitoringDoorBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByMonitoringDoorBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MonitoringStatus")
    public MonitoringStatus getMonitoringStatus() {
        return this.monitoringStatus;
    }
    
    public void setMonitoringStatus(MonitoringStatus monitoringStatus) {
        this.monitoringStatus = monitoringStatus;
    }



    @Transient
    public String getMonitoringStatusCode() {
        return this.monitoringStatus == null ? null : this.monitoringStatus.getCode();
    }

    public void setMonitoringStatusCode(String code) {
        if (code == null) {
            this.monitoringStatus = null;
        } else {
            MonitoringStatus obj = new MonitoringStatus();
            obj.setCode(code);
            this.monitoringStatus = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MonitoringVanBedrijf_ID")
    public Bedrijf getBedrijfByMonitoringVanBedrijfId() {
        return this.bedrijfByMonitoringVanBedrijfId;
    }
    
    public void setBedrijfByMonitoringVanBedrijfId(Bedrijf bedrijfByMonitoringVanBedrijfId) {
        this.bedrijfByMonitoringVanBedrijfId = bedrijfByMonitoringVanBedrijfId;
    }



    @Transient
    public Integer getBedrijfByMonitoringVanBedrijfIdBedrijfId() {
        return this.bedrijfByMonitoringVanBedrijfId == null ? null : this.bedrijfByMonitoringVanBedrijfId.getBedrijfId();
    }

    public void setBedrijfByMonitoringVanBedrijfIdBedrijfId(Integer bedrijfId) {
        if (bedrijfId == null) {
            this.bedrijfByMonitoringVanBedrijfId = null;
        } else {
            Bedrijf obj = new Bedrijf();
            obj.setBedrijfId(bedrijfId);
            this.bedrijfByMonitoringVanBedrijfId = obj;
        }
    }


@XmlTransient
@JsonIgnore
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LaatsteMutatieDoorGebruiker_ID")
    public Gebruiker getGebruikerByLaatsteMutatieDoorGebruikerId() {
        return this.gebruikerByLaatsteMutatieDoorGebruikerId;
    }
    
    public void setGebruikerByLaatsteMutatieDoorGebruikerId(Gebruiker gebruikerByLaatsteMutatieDoorGebruikerId) {
        this.gebruikerByLaatsteMutatieDoorGebruikerId = gebruikerByLaatsteMutatieDoorGebruikerId;
    }



    @Transient
    public Integer getGebruikerByLaatsteMutatieDoorGebruikerIdGebruikerId() {
        return this.gebruikerByLaatsteMutatieDoorGebruikerId == null ? null : this.gebruikerByLaatsteMutatieDoorGebruikerId.getGebruikerId();
    }

    public void setGebruikerByLaatsteMutatieDoorGebruikerIdGebruikerId(int gebruikerId) {
        Gebruiker obj = new Gebruiker();
        obj.setGebruikerId(gebruikerId);
        this.gebruikerByLaatsteMutatieDoorGebruikerId = obj;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumStart", length=19)
    public Date getDatumStart() {
        return this.datumStart;
    }
    
    public void setDatumStart(Date datumStart) {
        this.datumStart = datumStart;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumLaatsteCheck", length=19)
    public Date getDatumLaatsteCheck() {
        return this.datumLaatsteCheck;
    }
    
    public void setDatumLaatsteCheck(Date datumLaatsteCheck) {
        this.datumLaatsteCheck = datumLaatsteCheck;
    }


// @org.codehaus.jackson.map.annotate.JsonSerialize(using=nl.devoorkant.bdr.jackson.JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DatumEinde", length=19)
    public Date getDatumEinde() {
        return this.datumEinde;
    }
    
    public void setDatumEinde(Date datumEinde) {
        this.datumEinde = datumEinde;
    }


    
    @Column(name="ReferentieNummerIntern", length=50)
    public String getReferentieNummerIntern() {
        return this.referentieNummerIntern;
    }
    
    public void setReferentieNummerIntern(String referentieNummerIntern) {
        this.referentieNummerIntern = referentieNummerIntern;
    }


    
    @Column(name="KvKNummer", nullable=false, length=20)
    public String getKvKnummer() {
        return this.kvKnummer;
    }
    
    public void setKvKnummer(String kvKnummer) {
        this.kvKnummer = kvKnummer;
    }


@XmlTransient
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="monitoring")
    public Set<Alert> getAlerts() {
        return this.alerts;
    }
    
    public void setAlerts(Set<Alert> alerts) {
        this.alerts = alerts;
    }





}


