package nl.devoorkant.sbdr.data.model;
// Generated Feb 27, 2017 3:05:41 PM by Hibernate Tools 3.2.4.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

/**
 * Rol generated by hbm2java
 */

@XmlRootElement
// @org.jboss.resteasy.annotations.providers.jaxb.IgnoreMediaTypes("application/*+json")
// @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity(name="Rol")
@Table(name="Rol"
)
public class Rol  implements java.io.Serializable {


     private Integer rolId;
     private String code;
     private String omschrijving;
     private boolean actief;
     private Set<Bevoegdheid> bevoegdheden = new HashSet<Bevoegdheid>(0);
     private Set<Gebruiker> gebruikers = new HashSet<Gebruiker>(0);
     private Set<BedrijfManaged> bedrijvenManaged = new HashSet<BedrijfManaged>(0);

    public Rol() {
    }

   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Rol_ID", unique=true, nullable=false)
    public Integer getRolId() {
        return this.rolId;
    }
    
    public void setRolId(Integer rolId) {
        this.rolId = rolId;
    }


    
    @Column(name="Code", nullable=false, length=10)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }


    
    @Column(name="Omschrijving", length=100)
    public String getOmschrijving() {
        return this.omschrijving;
    }
    
    public void setOmschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
    }


    
    @Column(name="Actief", nullable=false)
    public boolean isActief() {
        return this.actief;
    }
    
    public void setActief(boolean actief) {
        this.actief = actief;
    }


@XmlTransient
@JsonIgnore
@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="Rol_Bevoegdheid", catalog="sbdr", joinColumns = { 
        @JoinColumn(name="Rol_ID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Bevoegdheid_ID", nullable=false, updatable=false) })
    public Set<Bevoegdheid> getBevoegdheden() {
        return this.bevoegdheden;
    }
    
    public void setBevoegdheden(Set<Bevoegdheid> bevoegdheden) {
        this.bevoegdheden = bevoegdheden;
    }


@XmlTransient
@JsonIgnore
@ManyToMany(fetch=FetchType.LAZY, mappedBy="rollen")
    public Set<Gebruiker> getGebruikers() {
        return this.gebruikers;
    }
    
    public void setGebruikers(Set<Gebruiker> gebruikers) {
        this.gebruikers = gebruikers;
    }


@XmlTransient
@JsonIgnore
@ManyToMany(fetch=FetchType.LAZY, mappedBy="rollen")
    public Set<BedrijfManaged> getBedrijvenManaged() {
        return this.bedrijvenManaged;
    }
    
    public void setBedrijvenManaged(Set<BedrijfManaged> bedrijvenManaged) {
        this.bedrijvenManaged = bedrijvenManaged;
    }


}


